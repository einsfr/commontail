# Generated by Django 3.2.12 on 2022-03-24 10:19

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields


class Migration(migrations.Migration):

    dependencies = [
        ('wagtaildocs', '0012_uploadeddocument'),
        ('wagtailcore', '0066_collection_management_permissions'),
        ('commontail', '0002_auto_20220318_1237'),
    ]

    operations = [
        migrations.CreateModel(
            name='PageLinkCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True, verbose_name='title')),
            ],
            options={
                'verbose_name': 'category of a page-to-page link',
                'verbose_name_plural': 'categories of page-to-page links',
            },
        ),
        migrations.CreateModel(
            name='PageLinkCategoryGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('handle', models.CharField(max_length=255, unique=True, verbose_name='handle')),
            ],
            options={
                'verbose_name': 'page-to-page link categories group',
                'verbose_name_plural': 'page-to-page link categories groups',
            },
        ),
        migrations.AlterField(
            model_name='commonsettings',
            name='docs_background',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='commontail.image', verbose_name='printable docs background'),
        ),
        migrations.AlterField(
            model_name='commonsettings',
            name='logo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='commontail.image', verbose_name='main logo'),
        ),
        migrations.AlterField(
            model_name='commonsettings',
            name='logo_square',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='+', to='commontail.image', verbose_name='square logo'),
        ),
        migrations.AlterUniqueTogether(
            name='menu',
            unique_together={('handle', 'site')},
        ),
        migrations.CreateModel(
            name='PageLinkCategoryToPageLinkCategoryGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='commontail.pagelinkcategory', verbose_name='category')),
                ('group', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_relations', to='commontail.pagelinkcategorygroup', verbose_name='group')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
                'unique_together': {('category', 'group')},
            },
        ),
        migrations.CreateModel(
            name='NamedReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, help_text='e-mail address to be used as a link.', max_length=254, verbose_name='e-mail address')),
                ('link_external', models.URLField(blank=True, help_text='Link to external URL. Must be used with "Link\'s test" field.', verbose_name='external link')),
                ('query_string', models.CharField(blank=True, help_text='Query string parameters without opening ?.', max_length=255, verbose_name='query string for a page link')),
                ('link_text', models.CharField(blank=True, help_text="Link's text. Required for external links only. May be used as substitute text with page and document links.", max_length=255, verbose_name="link's text")),
                ('handle', models.CharField(max_length=255, verbose_name='handle')),
                ('link_document', models.ForeignKey(blank=True, help_text='Link to a document on this site.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtaildocs.document', verbose_name='link to a document')),
                ('link_page', models.ForeignKey(blank=True, help_text='Link to a page on this site. "Query string" field may be used.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.page', verbose_name='link to a page')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.site', verbose_name='site')),
            ],
            options={
                'verbose_name': 'named reference',
                'verbose_name_plural': 'named references',
                'unique_together': {('site', 'handle')},
            },
        ),
    ]
