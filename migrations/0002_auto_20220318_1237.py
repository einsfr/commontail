# Generated by Django 3.2.12 on 2022-03-18 09:37

import commontail.models.cache
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.documents.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtaildocs', '0012_uploadeddocument'),
        ('wagtailcore', '0066_collection_management_permissions'),
        ('commontail', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('handle', models.CharField(help_text='Must be unique per site, will be used as a reference by rendering tag.', max_length=255, verbose_name='handle')),
                ('items', wagtail.core.fields.StreamField([('category', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(label='Menu category title', max_length=64, required=True)), ('items', wagtail.core.blocks.StreamBlock([('document', wagtail.core.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock(label='Document', required=True)), ('link_text', wagtail.core.blocks.CharBlock(label="Link's text", max_length=64, required=False))])), ('external', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(label="Link's text", max_length=64, required=False)), ('url', wagtail.core.blocks.URLBlock(label='URL', required=True))])), ('page', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(label="Link's text", max_length=64, required=False)), ('page', wagtail.core.blocks.PageChooserBlock(label='Page', required=True)), ('query_string', wagtail.core.blocks.CharBlock(label='Query string', max_length=255, required=False))])), ('subcategory', wagtail.core.blocks.StructBlock([('title', wagtail.core.blocks.CharBlock(label='Menu subcategory title', max_length=64, required=True)), ('items', wagtail.core.blocks.StreamBlock([('document', wagtail.core.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock(label='Document', required=True)), ('link_text', wagtail.core.blocks.CharBlock(label="Link's text", max_length=64, required=False))])), ('external', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(label="Link's text", max_length=64, required=False)), ('url', wagtail.core.blocks.URLBlock(label='URL', required=True))])), ('page', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(label="Link's text", max_length=64, required=False)), ('page', wagtail.core.blocks.PageChooserBlock(label='Page', required=True)), ('query_string', wagtail.core.blocks.CharBlock(label='Query string', max_length=255, required=False))]))]))]))]))])), ('document', wagtail.core.blocks.StructBlock([('document', wagtail.documents.blocks.DocumentChooserBlock(label='Document', required=True)), ('link_text', wagtail.core.blocks.CharBlock(label="Link's text", max_length=64, required=False))])), ('external', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(label="Link's text", max_length=64, required=False)), ('url', wagtail.core.blocks.URLBlock(label='URL', required=True))])), ('page', wagtail.core.blocks.StructBlock([('link_text', wagtail.core.blocks.CharBlock(label="Link's text", max_length=64, required=False)), ('page', wagtail.core.blocks.PageChooserBlock(label='Page', required=True)), ('query_string', wagtail.core.blocks.CharBlock(label='Query string', max_length=255, required=False))]))], verbose_name='Menu items')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.site', verbose_name='site')),
            ],
            options={
                'verbose_name': 'меню',
                'verbose_name_plural': 'меню',
                'abstract': False,
                'unique_together': {('site', 'handle')},
            },
            bases=(commontail.models.cache.AbstractCacheAware, models.Model),
        ),
    ]
